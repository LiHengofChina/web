

//====================================================================================
//====================================================================================



项目				最终会被编译为 JS 吗？			主要目的							属于哪种类型？
————————————————————————————————————————————————————————————————————————————————————————————————
TypeScript			✅ 会编译成原始 JS				增加 "类型系统" 以提升安全性		语言（JS 超集）
Vue.js				✅ 会被编译为 JS				提供 UI 框架和响应式系统			框架
React				✅ 会被编译为 JS				提供 UI 框架和组件系统				UI 库（类框架）


//=================================== TypeScript
//=================================== TypeScript

（1）是对 JavaScript 的“语言增强”。
（2）增强点：类型检查、接口、枚举、泛型等。
（3）本质上是开发阶段用的语言，最终会被  "tsc（TypeScript 编译器）" 编译为标准 JavaScript。
（4）它不关心你是用 React 还是 Vue，它只是让 JS 写得更安全。


//=================================== Vue.js 和 React
//=================================== Vue.js 和 React
它们是构建用户界面的框架（或库），提供：
	（1）响应式系统
	（2）组件系统
	（3）生命周期控制
	（4）虚拟 DOM 渲染机制等

它们写的 .vue 文件或 .jsx/.tsx 组件，
	最终也会通过工具（如 Webpack、Vite、Babel）编译成标准 JavaScript。

它们是 功能库/框架，不是语言。


//=================================== 总结一句话：
//=================================== 总结一句话：
TypeScript 是对 JS 的语言增强（关注类型），
Vue 和 React 是在 JS 基础上提供 UI 构建能力的框架/库（关注功能），
三者都最终会被编译为浏览器能识别的 JavaScript 执行。


