
{ ... } as SomeType


"把这个对象 {} 当成 ProColumns<API.RuleBaseLineDetailResponse> 类型来看"


表示："我确定这个对象是 SomeType 类型"，即使 TypeScript 推断不出来，我也强制它接受。

//====================================================== 示例
//====================================================== 示例

{
  title: '启用状态',
  dataIndex: 'enabledStatus',
  width: 200,
  render: ...
} as ProColumns<API.RuleBaseLineDetailResponse>


意思是：

"这个对象是一个表格列配置，它的字段类型是 ProColumns，而这列数据来自 RuleBaseLineDetailResponse"

//====================================================== 为什么需要这样写？
//====================================================== 为什么需要这样写？

因为 TypeScript 有时候推断不出联合类型数组中某一项的具体类型，比如你放在 ...[] 里的对象，
它不一定能推断出你是 ProColumns<T> 类型，所以我们手动告诉它。

//====================================================== 等价形式（函数式）也可以写：
//====================================================== 等价形式（函数式）也可以写：
const column: ProColumns<API.RuleBaseLineDetailResponse> = {
  title: '启用状态',
  ...
};

