HTML5 是向后兼容的，这意味着你之前在 HTML4 或 XHTML 中使用的代码在 HTML5 中仍然是有效的。
这种兼容性允许开发者在不完全重写现有代码的情况下，
逐步采用 HTML5 的新特性和改进。


//================================================= 兼容性细节
//================================================= 兼容性细节

（1）基础标签：
		所有传统的 HTML 标签（如 <div>, <span>, <p>, <a> 等）在 HTML5 中都可以正常使用。

（2）文档结构：HTML4 和 XHTML 中的结构性元素在 HTML5 中仍然有效，
		如 <head>, <body>, <title>, <meta> 等。

（3）表单控件：
		传统的表单元素如 <input>, <textarea>, <select>, <button> 仍然适用，
		并且 HTML5 还引入了新的输入类型和表单属性。

（4）事件和属性：HTML4 中的事件处理程序（如 onclick, onmouseover）
	    和全局属性（如 id, class, style）在 HTML5 中依然有效。

（5）旧的特性：一些较旧的特性虽然在 HTML5 中不推荐使用（deprecate），
		但仍然有效。例如，HTML5 不推荐使用 <font> 标签或基于表格的布局，
		但这些特性仍然可以在 HTML5 中工作。

//================================================= 需要注意的几点
//================================================= 需要注意的几点

（1）用和废弃元素：HTML5 对一些过时的元素和属性进行了弃用（deprecated），
	例如 <center>, <font>, <big>, <strike> 等，这些元素虽然可以继续使用，但在现代开发中建议避免。

（2）更严格的标准：HTML5 标准对标记的使用和结构更加严格，
	尤其是在使用新特性时。
	虽然宽松模式下兼容旧代码，但在严格模式下，可能会有一些不兼容的行为。

（3）新特性和语法：
	HTML5 引入了许多新特性和语法
	（如 <article>, <section>, <nav>, <header>, <footer> 等语义元素），
	这些新特性是向后兼容的，但旧的浏览器可能无法完全支持。

//=================================================
//=================================================

总的来说，HTML5 的设计目标之一就是兼容以前的 HTML 标准，允许开发者平稳过渡并逐步采用新特性。
因此，在 HTML4 或 XHTML 中编写的代码通常可以无缝迁移到 HTML5 中。

