 
//========================================================================  .then() .catch() 和 .finally()  说明
//========================================================================  .then() .catch() 和 .finally()  说明


	Promise 类有 .then() .catch() 和 .finally() 三个方法，
	这三个方法的参数都是一个函数，
		
		.then() 可以将 "参数中的函数" 添加到当前 Promise 的正常执行序列，
				
		.catch() 则是设定 Promise 的异常处理序列，
		.finally() 是在 Promise 执行的最后一定会执行的序列。


		.then() 传入的函数会按顺序依次执行，
		"有任何异常" 都会直接跳到 catch 序列：

	 


//======================================================================== 主动抛出异常
//======================================================================== 主动抛出异常
	/**
	 主动抛出异常
	*/
	new Promise(function (resolve, reject) {
		console.log(1111);
		resolve(2222);
	}).then(function (value) {
		console.log(value);
		return 3333;
	}).then(function (value) {
		console.log(value);
		throw "An error";
	}).catch(function (err) {
		console.log(err);
	});


 

//======================================================================== finally
//======================================================================== finally
		不管是	resolve	
		还是 reject

		最后 一定执行  finally 里面的代码 




