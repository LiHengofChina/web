
//==================================================================
//==================================================================

我们之前遇到的异步任务都 "一次异步" ，如果需要 "多次调用异步函数" 呢？

例如，如果我想分三次输出字符串，第一次间隔 1 秒，第二次间隔 4 秒，第三次间隔 3 秒：

//================================================================== 旧写法：多次异步任务需要串行
//================================================================== 旧写法：多次异步任务需要串行
//================================================================== 旧写法：多次异步任务需要串行
setTimeout(function () {
    console.log("First");
    setTimeout(function () {
        console.log("Second");
        setTimeout(function () {
            console.log("Third");
        }, 3000);
    }, 4000);
}, 1000);


这段程序实现了这个功能，但是它是用 "函数瀑布" 来实现的。
可想而知，在一个复杂的程序当中，
用 "函数瀑布" 实现的程序无论是维护还是异常处理都是一件特别繁琐的事情，
而且会让缩进格式变得非常冗赘。

//================================================================== 新写法，使用 Promise 实现多次异步任务串行
//================================================================== 新写法，使用 Promise 实现多次异步任务串行

new Promise(function (resolve, reject) {
	
    setTimeout(function () {
        console.log("First");
        resolve();
    }, 1000);
	
}).then(function () {
	
    return new Promise(function (resolve, reject) {
        setTimeout(function () {
            console.log("Second");
            resolve();
        }, 4000);
    });
	
}).then(function () {
	
    setTimeout(function () {
        console.log("Third");
    }, 3000);
	
});
	
	






