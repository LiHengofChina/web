path 模块提供了一些工具函数，用于处理文件与目录的路径

const path = require('path');



1. 获取路径

	const path=require("path");
	var filepath='/node/base/path/test.js';
	console.log(
		path.dirname(filepath)
	)
	//输出/node/base/path

2. path.basename(filename)

	path.basename(filepath)实际上是获取了路径的最后一部分，
	而不是真正的获取到了文件名，但是在实际应用中最后的字符往往就是我们的文件名
	
	const path = require("path");
	console.log(path.basename("/node/base/path/test.js"));
	//输出    test.js
	console.log(path.basename("/node/base/path/test/"));
	//输出    test
	console.log(path.basename("/node/base/path/test"));
	//输出    test
	
3. 获取文件名，但不获取扩展文件名
	const path = require("path");
	console.log(path.basename("/node/base/path/test.js",".js"));

4. 获取扩展文件名
	const path = require("path");
	console.log(path.extname("/node/base/path/test.js",".js"));
	//输出    .js


5. 拼接路径
	path.join方法用于连接路径。
	该方法的主要用途在于，会正确使用当前系统的路径分隔符，
	Unix系统是”/“，Windows系统是”\“。
	
	console.log(path.join('a', 'b', '..', 'c/', './d'));
	// 将path片段都连接起来
	// 输出：a/c/d

6. 相对路径转为绝对路径。

	path.resolve() 方法用于将相对路径转为绝对路径。
 

	/作为绝对路径的根目录，遇到 / 则回到根目录解析

	它可以接受多个参数，依次表示所要进入的路径，
	直到将最后一个参数转为绝对路径。

	如果根据参数无法得到绝对路径，
	就以当前所在路径作为基准。
	除了根目录，该方法的返回值都不带尾部的斜杠
	//====================================示例
	path.resolve(); // 默认返回所在目录绝对路径，等于 __dirname 
	path.resolve('/foo/bar', './baz')
	// '/foo/bar/baz'

	path.resolve('/foo/bar', '/tmp/file/')
	// '/tmp/file'
 
	
