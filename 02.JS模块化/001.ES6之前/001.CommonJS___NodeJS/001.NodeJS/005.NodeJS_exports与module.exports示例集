//遵循COMMON.JS的规范 进行模块化开发
exports 或 module.exports 使用  require 引入

//========================================================= exports 与 moudel.exports
//========================================================= exports 与 moudel.exports



//========================================================= require
//========================================================= require
require 导入是比较霸道的，直接require('path')
//全部导入 类似 import * as x from ''
 
//========================================================= 示例1： module.exports
//========================================================= 示例1： module.exports
//导出
var a={
    name:'node',
    length:4
}
module.exports = a  
//引入
var a = require('./exports.js')
console.log(a.name);

//========================================================= 示例2： module.exports
//========================================================= 示例2： module.exports
//导出
module.exports={
    fn1:fn1,   //前面的fn1 类似于 export中的 as 别名  //引入 通过fn1 调用 fn1 方法
    fn2,        //键值相同可以简写的
    c:c
}
//引入
var a=require('./exports.js')
console.log(a.c)
a.fn1()
a.fn2()

//========================================================= 示例3：exports
//========================================================= 示例3：exports
//exports只是辅助器，到最后还是会转换成module.exports
//导出
exports.fn1=fn1
exports.fn2=fn2 
//引入
var a=require('./exports.js') 
a.fn1()
a.fn2()

