
app.get("/", ...用来创建路由
//======================================  app.use() 方法的作用
app.use ： 用来给path注册中间函数的。
		//这个path默认是“/”，也就是处理任何请求，
		
		//同时注意的是他会处理path下的子路径，
		//如果设置path为‘/hello’,
		//那么请求路径为‘/hello/’,'/hello/nihao','/hello/bye'
		//这样的请求都会交给中间函数处理的。
	
		//============示例：
		app.use(express.static(_dirname + '/public'))	
			//是将所有请求
			//先交给express.static(_dirname + '/public')来处理一下

//=========================================== 什么时候用.use()
//=========================================== 什么时候用.use()
 
要使用中间件的时候，比如添加过滤器，判断是不是有session

//============================================ // 一个简单的中间件
//============================================ // 一个简单的中间件
function middleware(req, res, next){
    // req 参数可以接受一些请求的参数(req.query/req.body) 和 请求头信息
    // res 用于响应信息
    // 调用next()方法则进入下一个中间件
}
// 几种常见的调用方式
app.use(middleware);
app.use('/user',middleware); // 匹配部分路径
app.get('/login',middleware);
//============================================ // 一个复杂点的中间件
//============================================ // 一个复杂点的中间件
 
const express=require('express')


var server=express()
server.use('/',function(req,res,next){
  console.log("中间件")
  next()
})
//通过中间件设置cookie 账号
server.use('/nodejs',function(req,res){
  console.log("中间件二")	

  res.send('welcome nodejs')
})
//通过路由设置cookie 密码，并加密
server.get('/lin/secret',function(req,res){

  res.send("路由")
})
server.listen(8080)

//http://localhost:8080/nodejs
//http://localhost:8080/lin/secret
 
