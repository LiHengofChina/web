//=========================================================================
//=========================================================================

webpack-dev-server 是webpack 的运行插件

//=========================================================================
//=========================================================================


(9) 使用webpack构建本地服务器

	Webpack提供一个可选的本地开发服务器
	这个本地服务器基于node.js构建
	它是一个单独的组件

	//局部安装
	npm install --save-dev webpack
	npm install --save-dev webpack-cli			
	npm install --save-dev webpack-dev-server
	//示例：
    devServer: {
		contentBase: "./public",  //本地服务器所加载的页面所在的目录
		historyApiFallback: true, //不跳转
		inline: true              //实时刷新
    }



//========================================================================= 配置说明 
//========================================================================= 配置说明 
devServer: {
		clientLogLevel: 'warning', 		//日志级别
		progress:true,					//有打包的进度条
		port:3000,						//指定本地服务器端口
		contentBase :'./src', 			// 指定打包的基础路径，src为根路径打包，也就是只打包src里面的文件
		compress:true 					//智能压缩
}


//========================================================================= 命令参数
//========================================================================= 命令参数

webpack-dev-server 

--inline   		 //刷新模式 
--progress       //显示进度条
--open chrome    //打开谷歌浏览器
			//========================================================================= 刷新模式 
			//========================================================================= 刷新模式 
			https://segmentfault.com/a/1190000014141798
			Iframe mode和Inline mode最后达到的效果都是一样的，都是监听文件的变化，然后再将编译后的文件推送到前端，完成页面的reload的。
			通过设置devServer.inline切换两种模式，默认为inline模式。
			当使用HMR功能时，推荐使用inline mode。





//========================================================================= 命令启动
//========================================================================= 命令启动

webpack-dev-server --open chrome

//========================================================================= npm引导启动
//========================================================================= npm引导启动
package.json
{
...... 
  "scripts": {
 
    "server": "webpack-dev-server --open chrome"
  } 
}


npm run server  //启动服务器



