
https://www.cnblogs.com/powertoolsteam/p/10873677.html

//====================================================================== 绍动态导入（dynamic import）
//====================================================================== 绍动态导入（dynamic import）


在过去，ECMAScript模块是完全静态的。你必须在运行代码之前指明想要导入和导出的东西

随着动态导入提案的出现
你就可以添加动态导入模块了。使用它时，你可能会根据用户及其操作行为的做相应处理。

比如，你有一个单页应用，
只有当用户决定打开它的子页面时才加载特定代码。
这样可以大幅节省应用的初始加载时间。

//====================================================================== 使用动态导入
//====================================================================== 使用动态导入

动态导入操作符是作为函数使用的。
它接受一个字符串参数，返回一个Promise。当模块加载好后，这个Promise被resolve。

document.addEventListener("DOMContentLoaded", () => {
	
		  const button = document.querySelector('#divideButton');
		  button.addEventListener('click', () => {  //添加一个点击事件，
				import('./utilities/divide')		//点击的时候，导入./utilities/divide模块
				.then(divideModule => {				//导入之后，执行下面的代码 
					  console.log(divideModule.divide(6, 3)); // 2
				})
		  });
		  
});
/**
	说明 ：
				在浏览器的开发者工具，如果打开Network标签，你可以看到，
				模块开始下载的发生在点击按钮之后，而不是在此之前。
				值得注意的是，如果再次点击按钮，包含了拆分后的模块文件不会再次被下载。
*/



