https://www.cnblogs.com/-walker/p/6056529.html

//======================================== 什么是Webpack
//======================================== 什么是Webpack
	可以看做是"模块打包机"
	它做的事情是：
			"分析" 你的项目结构，
			以及其它的一些 "浏览器不能直接运行" 的 "拓展语言（Scss，TypeScript等）" ，
			将其打包为 "合适的格式" 以供 "浏览器使用" 。

//======================================== 为什要使用WebPack
//======================================== 为什要使用WebPack

	"很多网页"其实可以看做是"功能丰富的应用"
	它们拥有着"复杂的JavaScript代码"和"一大堆依赖包"。
	
	为了"简化开发的复杂度"，
	前端社区涌现出了"很多好的实践方法"
	
	//=======
	a:模块化，让我们可以把复杂的程序细化为小的文件;
	b:类似于TypeScript这种在JavaScript基础上拓展的开发语言：
	  能够实现目前版本的JavaScript不能直接使用的特性
	  它还能转换为JavaScript文件使浏览器可以识别；
	c:scss，less等CSS预处理器
	.........
	//==============================一分为二
	这些改进 "提高了开发效率" ，
	但是需要进行 "额外的处理" 才能 "让浏览器识别"
	而 "手动处理" 又是 "非常繁琐" 的，
	这就为 "WebPack类的工具" 的出现提 "供了需求"。
//========================================WebPack 和 Grunt 以及 Gulp 相比有什么特性
//========================================WebPack 和 Grunt 以及 Gulp 相比有什么特性

	Grunt和Gulp的工作方式是：
		/**
			在一个配置文件中，
			指明对某些文件进行类似编译，
			组合，压缩等任务的具体步骤，
			这个工具之后可以自动替你完成这些任务。
		*/
		
	Webpack的工作方式是：
		/**
			把你的项目当做一个整体，通
			过一个给定的主文件（如：index.js），
			Webpack将从这个文件开始找到你的项目的所有依赖文件，
			使用loaders（装载器）处理它们，
			最后打包为一个浏览器可识别的JavaScript文件。
		*/

//======================================== 优点：模块化
//======================================== 优点：模块化	
	在webpack看来"一切都是模块"！
		1). 你的JavaScript代码，
		2). CSS和fonts
		3). 图片
		4). 等等等
	只要通过合适的loaders，
	都可以被当做模块被处理。
			
