transpileDependencies

transpileDependencies 是 Vue CLI 项目中的一个配置选项，
用于指定需要通过 Babel 转译的依赖项。
默认情况下，Vue CLI 使用 Babel 转译项目中的 JavaScript 代码，
以确保兼容较旧的浏览器环境。
然而，通常情况下，node_modules 目录下的依赖包不会被 Babel 转译，
因为这些包通常已经是编译过的代码。

//====================== 作用和使用场景
//====================== 作用和使用场景
//======= 兼容性问题:
//======= 兼容性问题:

	某些第三方库可能使用了现代 JavaScript 特性，
	这些特性在旧版浏览器（如 IE11）中不被支持。
	如果这些库没有提供预编译的低版本代码（ES5），
	直接使用可能导致浏览器兼容性问题。

//======= 解决方案:
//======= 解决方案:
	使用 transpileDependencies 指定这些需要转译的依赖项，
	让 Babel 在构建过程中也对这些依赖进行转译，以确保兼容性。
	
//====================== 配置方式
//====================== 配置方式
transpileDependencies 可以接受一个数组，包含需要转译的依赖包的名称或者正则表达式。
// vue.config.js
module.exports = {
  transpileDependencies: [
    'some-es6-package', // 需要转译的包名
    'another-package',  // 另一个包名
    /regex-to-match-package/ // 正则表达式匹配包名
  ]
};

/**
解释：
	（1）数组元素: 数组中的每一个元素都表示一个需要通过 Babel 转译的依赖包。
				   可以是包名字符串，也可以是匹配包名的正则表达式。
	（2）为什么需要转译依赖项: 
				   一些库可能使用了箭头函数、const/let 声明、
				   模板字符串等 ES6 及以上的语法特性。
				   如果这些代码不被旧版浏览器支持，
				   在没有转译的情况下可能会导致错误。
*/
//====================== 配置方式
//====================== 配置方式

	transpileDependencies: true,

	这会导致 Babel 转译 node_modules 中的所有依赖项。

//====================== 注意事项
//====================== 注意事项
	（1）转译的性能开销: 转译 node_modules 中的依赖项可能会增加构建时间，
						 因此通常建议仅对确实需要转译的依赖项进行此配置。
	（2）选择性转译: 通过指定需要转译的包，
					 可以避免不必要的转译操作，减少构建时间。

