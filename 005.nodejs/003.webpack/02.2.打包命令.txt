//============================================================
//============================================================

5).终端中使用 webpack，意思是使用webpack命令打包，
	//node_modules/.bin/webpack app/main.js public/bundle.js
	webpack app/main.js -o public/bundle.js
	
	//打包成功
	在 public 目录 生成：
		bundle.js
		bundle.js.map
	
6).通过配置文件方式使用
	
	//新建立： webpack.config.js  文件

	//“__dirname”是node.js中的一个全局变量，它指向当前执行脚本所在的目录。


	此时使用 webpack 命令打包
	//自动找到 webpack.config.js 配置文件，根据配置文件输出产品

		
	
7).使用npm命令引导任务执行

	在package.json中对scripts对象进行相关设置

	 "scripts": {
		"start": "webpack"  //这里不能有注释
	 }

npm start  		//start 名字特殊， 	//开始打包
npm run build  //其它的必须要加run //开始打包

//============================================================ 指定配置文件打包
//============================================================ 指定配置文件打包

默认使用的是 webpack.config.js 打包

使用 --config 指定配置文件打包
	webpack --config webpack.name.js
	
//============================================================ 命令参数说明
//============================================================ 命令参数说明


webpack --config webpack.config.js  //使用另一份配置文件（比如webpack.config2.js）来打包

webpack --watch webpack.config.js   //这个参数就要的作用就是监听文件是否有改变，有改变就会重新编译有改变的文件。这个命令非常有用
									//webpack就会一直运行，而不是 像webpack命令执行之后就会停止。

webpack -p  //压缩混淆脚本，这个非常非常重要！
			//-p 是很重要的参数，曾经一个未压缩的 700kb 的文件，
			//压缩后直接降到 180kb （主要是样式这块一句就独占一行脚本，导致未压缩脚本变得很大） 。

webpack -d//生成map映射文件，告知哪些模块被最终打包到哪里了其中的 

webpack --progress //显示进度条

webpack --color //添加颜色






