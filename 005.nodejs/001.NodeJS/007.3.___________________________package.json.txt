Node.js 的包是一个目录，其中包含一个  JSON 格式 的 包说明文件 package.json 。

  "dependencies": {
    "@antv/g6": "^3.5.9",
    "@liripeng/vue-audio-player": "^1.2.9",
    "axios": "^0.25.0",
    "chokidar": "^3.0.0",
    "docxtemplater": "^3.28.1",
    "docxtemplater-image-module-free": "^1.1.1",
    "echarts": "^5.2.1",
    "file-saver": "^2.0.5",
    "jszip-utils": "^0.1.0",
    "mftcc-npm": "^1.2.36",
    "mftcc-router-npm": "^1.0.8",
    "pizzip": "^3.1.1",
    "relation-graph": "^1.1.0",
    "v-viewer": "^1.5.1",
    "viewerjs": "^1.10.2",
    "vue-mini-player": "^0.2.1",
    "vue-video-player": "^5.0.2",
    "wangeditor": "^4.7.9",
    "moment": "^2.29.1",
    "redis": "^3.0.2"
  },

//========================================================================= npm install
//========================================================================= npm install

在 package.json 所在的同级目录下执行 npm install 命令时，
npm 会自动读取 package.json 文件中的 dependencies 和 devDependencies 字段，
并安装其中列出的所有依赖包。

//========================================================================= npm install 反向修改 package.json 文件
//========================================================================= npm install 反向修改 package.json 文件

npm install --save-dev webpack-dev-server 会反向修 改package.json文件，
（1） 有 --save-dev 加在 devDependencies 中
（2） 没有 --save-dev 加在 dependencies 中

//========================================================================= 选项说明
//========================================================================= 选项说明

--save 或 -S 		反写 package.json 文件，添加到 dependencies 中   //不加参数 等于这个
--save-dev 或 -D    反写 package.json 文件，添加到  devDependencies 中
--global 或 -g      不反写 package.json文件，全局安装

/**
注意：
	简写是 -
	不简写是 --
*/

//========================================================================= "安装包" 的 版本说明 
//========================================================================= "安装包" 的 版本说明 

//============== 默认会安装这些包的最新版本
npm install webpack -D
npm install webpack-cli -D


//============== 安装指定版本
npm install webpack@4.46.0 -D
npm install webpack-cli@3.3.12 -D



//========================================================================= 脚本 
//========================================================================= 脚本 

"scripts": {
    "clean": "rimraf dist",
    "build": "npm run clean && webpack",
    "start": "npm run build && node server.js"
  },

scripts 中的脚本可以互相调用，就是 下在定义的，可以调用上面定义的,
注意是使用 npm run 调用



