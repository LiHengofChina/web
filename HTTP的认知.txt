//====================================== http的特点
//====================================== http的特点
1). 基于tcp/ip、一种网络应用层协议、超文本传输协议HyperText Transfer Protocol
2). 工作方式：客户端请求服务端应答的模式
3). 快速：无状态连接
4). 灵活：可以传输任意对象，对象类型由Content-Type标记
5). 客户端请求request消息包括以下格式：请求行（request line）、请求头部（header）、空行、请求数据


//====================================== 请求内容
//====================================== 请求内容
	请求行（request line）、请求头部（header）、空行、请求数据

//====================================== 响应内容
//====================================== 响应内容
	服务端响应response也由四个部分组成，分别是：
	状态行、
	消息报头、
	空行、
	响应正文
//====================================== 请求方法
//====================================== 请求方法
HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。
HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。
HTTP2.0 新的二进制格式（Binary Format）

1 GET 	  //请求指定的页面信息，并返回实体主体。
2 HEAD    //类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头
3 POST    //向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。
		  //数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。
4 PUT 	  //从客户端向服务器传送的数据取代指定的文档的内容。
5 DELETE  //请求服务器删除指定的页面。
6 CONNECT //HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。
7 OPTIONS //允许客户端查看服务器的性能。
8 TRACE   //回显服务器收到的请求，主要用于测试或诊断。

//====================================== http状态
100 Continue：
	服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求。
101 Switching Protocols：
	服务器转换协议：服务器将遵从客户的请求转换到另外一种协议。
102 由WebDAV（RFC 2518）：
	扩展的状态码，代表处理将被继续执行
//=================成功类
//=================成功类
200 OK：
	请求成功（其后是对GET和POST请求的应答文档。）
201 Created：
	请求被创建完成，同时新的资源被创建。
202 Accepted：
	供处理的请求已被接受，但是处理未完成。
203 Non-authoritative Information：
	文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝。
204 No Content：
	没有新文档。浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。
205 Reset Content：
	没有新文档。但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容。
206 Partial Content：
	客户发送了一个带有Range头的GET请求，服务器完成了它。

//=================重定向类
//=================重定向类
300 Multiple Choices：
	多重选择。链接列表。用户可以选择某链接到达目的地。最多允许五个地址。
301 Moved Permanently：
	所请求的页面已经转移至新的url
302 Found：
	所请求的页面已经临时转移至新的url。
303 See Other：
	所请求的页面可在别的url下被找到。
304 Not Modified：
	未按预期修改文档。客户端有缓冲的文档并发出了一个条件性的请求（一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档）。服务器告诉客户，原来缓冲的文档还可以继续使用。
305 Use Proxy：
	客户请求的文档应该通过Location头所指明的代理服务器提取。
306 Unused：
	此代码被用于前一版本。目前已不再使用，但是代码依然被保留。
307 Temporary Redirect：
	被请求的页面已经临时移至新的url。
　
//=================客户端错误类
//=================客户端错误类
400 Bad Request：
	服务器未能理解请求。
401 Unauthorized：
	被请求的页面需要用户名和密码。
401.1：
	登录失败。
401.2：
	服务器配置导致登录失败。
401.3：
	由于 ACL 对资源的限制而未获得授权。
401.4：
	筛选器授权失败。
401.5：
	ISAPI/CGI 应用程序授权失败。
401.7：
	访问被 Web 服务器上的 URL 授权策略拒绝。这个错误代码为 IIS 6.0 所专用。
402 Payment Required：
	此代码尚无法使用。
403 Forbidden：
	对被请求页面的访问被禁止。
404 Not Found:
	服务器无法找到被请求的页面。
405 Method Not Allowed:
	请求中指定的方法不被允许。
406 Not Acceptable:
	服务器生成的响应无法被客户端所接受。
407 Proxy Authentication Required:
	用户必须首先使用代理服务器进行验证，这样请求才会被处理。
408 Request Timeout:
	请求超出了服务器的等待时间。
409 Conflict:
	由于冲突，请求无法被完成。
410 Gone:
	被请求的页面不可用。
411 Length Required:
	“Content-Length” 未被定义。如果无此内容，服务器不会接受请求。
412 Precondition Failed:
	请求中的前提条件被服务器评估为失败。
413 Request Entity Too Large:
	由于所请求的实体的太大，服务器不会接受请求。
414 Request-url Too Long:
	由于url太长，服务器不会接受请求。当post请求被转换为带有很长的查询信息的get请求时，就会发生这种情况。
415 Unsupported Media Type:
	由于媒介类型不被支持，服务器不会接受请求。
416 Requested Range Not Satisfiable:
	服务器不能满足客户在请求中指定的Range头。
417 Expectation Failed:
	执行失败。
423:
	锁定的错误。
　
//================= 服务端错误类
//================= 服务端错误类
500 Internal Server Error：
	请求未完成。服务器遇到不可预知的情况。
501 Not Implemented：
	请求未完成。服务器不支持所请求的功能。
502 Bad Gateway：
	请求未完成。服务器从上游服务器收到一个无效的响应。
503 Service Unavailable：
	请求未完成。服务器临时过载或宕机。
504 Gateway Timeout：
	网关超时。
505 HTTP Version Not Supported：
	服务器不支持请求中指明的HTTP协议版本。

 
