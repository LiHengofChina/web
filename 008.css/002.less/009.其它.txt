


//==================================================================运算（Operations）	
//==================================================================运算（Operations）	

	@conversion-1: 5cm + 10mm; // result is 6cm
	@conversion-2: 2 - 3cm - 5mm; // result is -1.5cm

	@incompatible-units: 2 + 5px - 3cm; // result is 4px

	@base: 5%;
	@filler: @base * 2; // result is 10%
	@other: @base + @filler; // result is 15%
		
	//calc()
	//calc() 并不对数学表达式进行计算，但是在嵌套函数中会计算变量和数学公式的值
	@var: 50vh/2;
	width: calc(50% + (@var - 20px));  // result is calc(50% + (25vh - 20px))
//==================================================================逃离(转义)	~
//==================================================================逃离(转义)	~
	
	转义允许您使用任何任意字符串作为属性或变量值。

	//less语法
	@min768: ~"(min-width: 768px)";
	.element {
	  @media @min768 {
		font-size: 1.2rem;
	  }
	}	
	//编译后CSS语法
	@media (min-width: 768px) {
	  .element {
		font-size: 1.2rem;
	  }
	}	
//==================================================================函数（Functions）		
//==================================================================函数（Functions）		
	Less 内置了多种函数用于转换颜色、处理字符串、算术运算等。
	//示例：
	@base: #f04615;
	@width: 0.5;
	.class {
	  width: percentage(@width); 	// returns `50%`	利用 percentage 函数将 0.5 转换为 50%
	  color: saturate(@base, 5%);	//将颜色饱和度增加 5%
	  background-color: spin(lighten(@base, 25%), 8);//颜色亮度降低 25% 并且色相值增加 8
	}	
//==================================================================命名空间和访问器	
//==================================================================命名空间和访问器	
	//（不要与CSS@namespace或命名空间选择器混淆）。
	有时候为了将混合(mixin)分组重用与分发，或为了组织代码
	//命名空间中声明的变量将仅限于该命名空间
	//========定义
	#bundle() {
	  .button {
		display: block;
		border: 1px solid black;
		background-color: grey;
		&:hover {
		  background-color: white
		}
	  }
	  .tab { ... }
	  .citation { ... }
	}
	//========使用
	#header a {
	  color: orange;
	  #bundle > .button;  // can also be written as #bundle.button
	}	
//==================================================================作用域（Scope）	
//==================================================================作用域（Scope）	
	Less中的范围与编程语言非常相似。
	"变量"和"混合"首先在本地查找，
	如果找不到，编译器将查找父范围，依此类推。
	
	@var: red;

	#page {
	  @var: white;
	  #header {
		color: @var; // white
	  }
	}	
	
//==================================================================注释（Comments）
//==================================================================注释（Comments）
 
	/* 一个块注释
	 * style comment! */
	@var: red;

	// 这一行被注释掉了！
	@var: white;
//==================================================================导入（Importing）		
//==================================================================导入（Importing）		
	给 CSS 加点料。
	可以导入less文件和css文件
	可以导入一个 .less 文件，此文件中的所有变量就可以全部使用了
	如果导入的文件是 .less 扩展名，则可以将扩展名省略掉：
	
@import "library"; // library.less
@import "typo.css";

	
	

