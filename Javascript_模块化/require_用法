  main.js 主模块的写法
	  //主模块依赖于其他模块，
	  //这时就要使用AMD规范定义的的require()函数。

	  require(['moduleA','moduleB','moduleC'], function(moduleA,moduleB,moduleC){
			// some code here
	  });

	  第一个参数是一个数组，表示所依赖的模块，
	  第二个参数是一个回调函数，当前面指定的模块都加载成功后，它将被调用。
	  
	  //加载的模块会以参数形式传入该函数，从而在回调函数内部就可以使用这些模块。
	  //require()异步加载moduleA，moduleB和moduleC，浏览器不会失去响应；
	  //它指定的回调函数，只有前面的模块都加载成功后，才会运行，解决了依赖性的问题。

//=================================================使用 require.js 编写模块
//=================================================使用 require.js 编写模块
	//定义
	define(function() {
		var add = function(x, y) {
			return x + y;
		};
		
		return { //返回
			add : add
		};
	});
	//加载
	require([ 'math' ], function(math) {
		console.log(math.add(1, 1));
	});

	//定义依赖其它模块的模块
	define([ 'myLib' ], function(myLib) {//当require()函数加载这个模块的时候，就会先加载myLib.js文件。
		function foo() {
			myLib.doSomething();
		}
		return {
			foo : foo
		};
	});	  
