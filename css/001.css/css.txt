//==================================================什么是 CSS?
//==================================================什么是 CSS?
解决内容与表现分离的问题

		//==========指定 <body/> 标签样式
		body
		{
			background-color:red;
		}
		//==========指定<h1/>标签样式
		h1
		{
			color:orange;
			text-align:center;
		}
		//==========指定<p/>标签样式
		p
		{
			font-family:"Times New Roman";
			font-size:50px;
		}
//==================================================CSS 规则	
//==================================================CSS 规则	
	CSS 规则由两部分构成：
				1).选择器
					//"选择器"通常是您需要改变样式的 HTML 元素。
				2).一条或多条声明
					
//==================================================CSS 注释
//==================================================CSS 注释
	/*这是个注释*/
	p {
		text-align:center;
		/*这是另一个注释*/
		color:black;
		font-family:arial;
	}

//==================================================引入 CSS 样式
//==================================================引入 CSS 样式
	当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。	
	
	1).外部样式表(External style sheet)
		<head>
		<link rel="stylesheet" type="text/css" href="mystyle.css">
		</head>		
	2).内部样式表(Internal style sheet)
		<head>
		<style>
		hr {color:sienna;}
		p {margin-left:20px;}
		body {background-image:url("images/back40.gif");}
		</style>
		</head>	
	3).内联样式(Inline style)	
		<p style="color:sienna;margin-left:20px">这是一个段落。</p>	
	//=================它们的优先级
	//=================它们的优先级
	
	（内联样式）Inline style > 
	（内部样式）Internal style sheet >
	（外部样式）External style sheet > 
	浏览器默认样式
	
//=================================================进一步讨论优先级
//=================================================进一步讨论优先级
	优先级仅由选择器组成的匹配规则决定的。
 
	 1. 内联样式表的权值最高 	1000；
	 2. ID 选择器的权值为 	 	100
	 3. Class 类选择器的权值为  10
	 4. HTML 标签选择器的权值为 1
	//=================!important 规则例外
	//=================!important 规则例外
	当 !important 规则被应用在一个样式声明中时,
	该样式声明会覆盖CSS中任何其他的声明, 
	无论它处在声明列表中的哪里.
	
	
//================================================== CSS中颜色值
//================================================== CSS中颜色值	
	CSS中，颜色值通常以以下方式定义:

	十六进制 - 如："#ff0000"
	RGB - 如："rgb(255,0,0)"
	颜色名称 - 如："red"
//================================================== 文本转换	
//================================================== 文本转换	
	p.uppercase {text-transform:uppercase;}
	p.lowercase {text-transform:lowercase;}
	p.capitalize {text-transform:capitalize;}	
	
	<p class="uppercase">This is some text.</p>
	<p class="lowercase">This is some text.</p>
	<p class="capitalize">This is some text.</p>	
//==================================================用em来设置字体大小	
//==================================================用em来设置字体大小	
	为了避免Internet Explorer 中无法调整文本的问题，
	许多开发者使用 em 单位代替像素。
	em的尺寸单位由W3C建议。
	1em和当前字体大小相等。在浏览器中默认的文字大小是16px。
	因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为em：px/16=em
	h1 {font-size:2.5em;} /* 40px/16=2.5em */
	h2 {font-size:1.875em;} /* 30px/16=1.875em */
	p {font-size:0.875em;} /* 14px/16=0.875em */		
//==================================================链接样式	
//==================================================链接样式
	链接有四个状态,用这四个状态可以细化们们的状态。
	
a:link - 正常，未访问过的链接
a:visited - 用户已访问过的链接
a:hover - 当用户鼠标放在链接上时
a:active - 链接被点击的那一刻
 
//==================================================列表 
//==================================================列表 
	//无序列表
	<ul>
	  <li>Coffee</li>
	  <li>Tea</li>
	  <li>Coca Cola</li>
	</ul> 
	//有序列表
	<ol class="c">
	  <li>Coffee</li>
	  <li>Tea</li>
	  <li>Coca Cola</li>
	</ol>
	//指定列表项标记的图像
	ul 
	{
		list-style-image:url('sqpurple.gif');
	}	
	

	
	
//==================================================Display(显示) 与 Visibility（可见性）
//==================================================Display(显示) 与 Visibility（可见性）
	
	
	//=========隐藏 
	display:none可以隐藏某个元素，且隐藏的元素不会占用任何空间。
	visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。
	//=========
	
	display:inline	//在一行显示内容
	display:block	//在多行显示内容
//==================================================Position(定位)	
//==================================================Position(定位)	
static		//static 元素的默认值，即没有定位，元素出现在正常的流中。

fixed		//元素的位置相对于浏览器窗口是固定位置。即使窗口是滚动的它也不会移动：

		sticky		//粘性定位的元素是依赖于用户的滚动，
					//在 position:relative 与 position:fixed 定位之间切换。
	
relative	//相对定位元素的定位是相对其"正常位置"。

absolute	//绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，
			//那么它的位置相对于<html>:	
			

//==================================================重叠的元素	
//==================================================重叠的元素	

	元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素
	z-index属性指定了一个元素的堆叠顺序
	（哪个元素应该放在前面，或后面）
	一个元素可以有正数或负数的堆叠顺序：

//==================================================什么是 CSS Float（浮动）？
//==================================================什么是 CSS Float（浮动）？
	CSS 的 Float（浮动），会使元素向左或向右移动，其周围的元素也会重新排列。
	 
	元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。
	一个浮动元素会尽量向左或向右移动，
	直到它的外边缘碰到包含框或另一个浮动框的边框为止。
	浮动元素之后的元素将围绕它。
	浮动元素之前的元素将不会受到影响。
	
	//===========
	clear 属性指定元素两侧不能出现浮动元素。
	使用 clear 属性往文本中添加图片廊：
 
	
	
	
	
	
	
	
	
	
				