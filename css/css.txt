//==================================================什么是 CSS?
//==================================================什么是 CSS?
解决内容与表现分离的问题

		//==========指定 <body/> 标签样式
		body
		{
			background-color:red;
		}
		//==========指定<h1/>标签样式
		h1
		{
			color:orange;
			text-align:center;
		}
		//==========指定<p/>标签样式
		p
		{
			font-family:"Times New Roman";
			font-size:50px;
		}
//==================================================CSS 规则	
//==================================================CSS 规则	
	CSS 规则由两部分构成：
				1).选择器
					//"选择器"通常是您需要改变样式的 HTML 元素。
				2).一条或多条声明
					
//==================================================CSS 注释
//==================================================CSS 注释
	/*这是个注释*/
	p {
		text-align:center;
		/*这是另一个注释*/
		color:black;
		font-family:arial;
	}

//==================================================引入 CSS 样式
//==================================================引入 CSS 样式
	当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。	
	
	1).外部样式表(External style sheet)
		<head>
		<link rel="stylesheet" type="text/css" href="mystyle.css">
		</head>		
	2).内部样式表(Internal style sheet)
		<head>
		<style>
		hr {color:sienna;}
		p {margin-left:20px;}
		body {background-image:url("images/back40.gif");}
		</style>
		</head>	
	3).内联样式(Inline style)	
		<p style="color:sienna;margin-left:20px">这是一个段落。</p>	
	//=================它们的优先级
	//=================它们的优先级
	
	（内联样式）Inline style > 
	（内部样式）Internal style sheet >
	（外部样式）External style sheet > 
	浏览器默认样式
	
//=================================================进一步讨论优先级
//=================================================进一步讨论优先级
	优先级仅由选择器组成的匹配规则决定的。
 
	 1. 内联样式表的权值最高 	1000；
	 2. ID 选择器的权值为 	 	100
	 3. Class 类选择器的权值为  10
	 4. HTML 标签选择器的权值为 1
	//=================!important 规则例外
	//=================!important 规则例外
	当 !important 规则被应用在一个样式声明中时,
	该样式声明会覆盖CSS中任何其他的声明, 
	无论它处在声明列表中的哪里.
	
	
//================================================== CSS中颜色值
//================================================== CSS中颜色值	
	CSS中，颜色值通常以以下方式定义:

	十六进制 - 如："#ff0000"
	RGB - 如："rgb(255,0,0)"
	颜色名称 - 如："red"
//================================================== 文本转换	
//================================================== 文本转换	
	p.uppercase {text-transform:uppercase;}
	p.lowercase {text-transform:lowercase;}
	p.capitalize {text-transform:capitalize;}	
	
	<p class="uppercase">This is some text.</p>
	<p class="lowercase">This is some text.</p>
	<p class="capitalize">This is some text.</p>	
//==================================================用em来设置字体大小	
//==================================================用em来设置字体大小	
	为了避免Internet Explorer 中无法调整文本的问题，
	许多开发者使用 em 单位代替像素。
	em的尺寸单位由W3C建议。
	1em和当前字体大小相等。在浏览器中默认的文字大小是16px。
	因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为em：px/16=em
	h1 {font-size:2.5em;} /* 40px/16=2.5em */
	h2 {font-size:1.875em;} /* 30px/16=1.875em */
	p {font-size:0.875em;} /* 14px/16=0.875em */		
//==================================================链接样式	
//==================================================链接样式
	链接有四个状态,用这四个状态可以细化们们的状态。
	
a:link - 正常，未访问过的链接
a:visited - 用户已访问过的链接
a:hover - 当用户鼠标放在链接上时
a:active - 链接被点击的那一刻
 
//==================================================列表 
//==================================================列表 
	//无序列表
	<ul>
	  <li>Coffee</li>
	  <li>Tea</li>
	  <li>Coca Cola</li>
	</ul> 
	//有序列表
	<ol class="c">
	  <li>Coffee</li>
	  <li>Tea</li>
	  <li>Coca Cola</li>
	</ol>
	//指定列表项标记的图像
	ul 
	{
		list-style-image:url('sqpurple.gif');
	}	
	
//==================================================选择器	
//==================================================选择器	
	//=================id 选择器
	//HTML元素以id属性来设置id选择器,
	//CSS 中 id 选择器以 "#" 来定义。
	
#para1
{
	text-align:center;
	color:red;
}
	
	//=================class 选择器
	//class 选择器有别于id选择器，
	//class可以在多个元素中使用。
	//class 选择器在HTML中以class属性表示,
	//在 CSS 中，类选择器以一个点"."号显示：
.center {
	text-align:center;
}	
	
	//=================class 选择器
	指<p>元素的下的center类
	p.center {text-align:center;}	
//==================================================分组选择器	
//==================================================分组选择器	
	//为了尽量减少代码，你可以使用分组选择器。
	//每个选择器用逗号分隔.
	h1,h2,p
	{
		color:green;
	}	
//==================================================嵌套 选择器	
//==================================================嵌套 选择器	
	为所有class="marked"元素内的p元素指定一个样式
	.marked p
	{
		color:white;
	}		


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	


				