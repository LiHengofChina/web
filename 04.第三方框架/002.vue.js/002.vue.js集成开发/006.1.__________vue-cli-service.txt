
//============================================================ （1）vue-cli-service 原理研究，以及其与webpack-dev-service的区别
//============================================================ （1）vue-cli-service 原理研究，以及其与webpack-dev-service的区别

（1）. 从package.json里面可以看到npm run dev其实就是 vue-cli-service serve。

（2）. vue-cli3.0 安装的时候把 vue-cli-service 一并安装了，
	   即执行了npm install vue-cli-service --save-dev。

（3）. 安装后，可以在./node_modules/.bin目录下查看到vue-cli-service。

（3）. vue-cli-service.js的核心代码
	   /**
			onst Service = require('../lib/Service')
			// 实例化Service
			// VUE_CLI_CONTEXT为undefined，所以传入的值为process.cwd()及项目所在目录
			const service = new Service(process.env.VUE_CLI_CONTEXT || process.cwd())
	   */

.....

最终执行的serve.js 内注册serve时传递的方法。webpack获取到配置之后，
实例化Compiler 传递给webpackDevServer，通过webpackDevServer实现自动编译和热更新。

（4）. 经过一系统的操作到了 webpack-dev-service


//============================================================ （2）
//============================================================ （2）

所以说到底，

vue-cli-sevice 还是基 于webpack-dev-server 的
而webpack-dev-server又是基于nodejs的express框架开的服务器 
//=================================================================================================== 安装包
//=================================================================================================== 安装包


npm install @vue/cli
npm install @vue/cli-service

//=================================================================================================== npm引导启动
//=================================================================================================== npm引导启动


"scripts": {
	"server": "vue-cli-service serve --open chrome",
}




//=================================================================================================== vue-cli-service 命令 及参数
//=================================================================================================== vue-cli-service 命令 及参数


（1）. vue-cli-service serve	
		--open    服务器启动时打开浏览器
		--copy    将URL复制到服务器启动时的剪贴板 (直接到浏览器去粘贴就OK了 http://localhost:8080/)
		--mode    指定环境模式 (默认: development)
		--host    host 地址 (default: 0.0.0.0)
		--port    端口号 (default: 8080)
		--https   使用https (default: false)


（2）. vue-cli-service build
		--mode        指定环境模式 (default: production)
		--dest        指定输出目录 (default: dist)
		--modern      构建两个版本的 js 包：一个面向支持现代浏览器的原生 ES2015+ 包，以及一个针对其他旧浏览器的包。
		--target      允许您以项目库或Web组件的形式在项目内部构建任何组件 app | lib | wc | wc-async (default: app) ???
		--name        lib或者web组件库的名称 (default: "name" in package.json or entry filename)
		--no-clean    在构建项目之前不要删除输出目录(dist)
		--report      生成report.html以帮助分析包内容
		--report-json 生成report.json来帮助分析包内容
		--watch       监听 - 当有改变时 自动重新打包~


（3）. vue-cli-service inspect

	   使用它vue-cli-service inspect来检查Vue CLI项目中的webpack配置。有关更多详细信息，请参阅检查Webpack配置
	   
