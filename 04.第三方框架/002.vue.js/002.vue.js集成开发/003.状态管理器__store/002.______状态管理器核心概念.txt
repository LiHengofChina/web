
//=================================================== Vuex 的核心概念
//=================================================== Vuex 的核心概念
Vuex 基于以下几个核心概念：

（1） State（状态）： 用于存储应用的数据。
	  在 Vuex 中，状态是响应式的，当状态改变时，依赖它的组件会自动更新。

（2） Getters（获取器）： 类似于 Vue 的计算属性（computed），
	  它们用于从状态中派生出新的数据。
	  Getters 可以缓存计算结果，并根据依赖进行更新。

（3）Mutations（突变）：
	  唯一能够同步修改状态的方法。
	  Mutations 类似于事件，
	  每个 mutation 都有一个 "字符串类型" 的 "事件类型" 和 "一个回调函数"。
	  这个 "回调函数" 就是 "实际修改状态" 的地方，并且它会接收 state 作为第一个参数。

（4）Actions（动作）： 与 mutations 类似，不同的是：
	  Actions 提交的是 mutations，而不是直接变更状态。
	  Actions 可以包含任意异步操作。

（5）Modules（模块）： 当应用变得非常复杂时，可以将 Vuex 的 store 分割成模块。
	  每个模块拥有自己的 state、mutations、actions 和 getters。

