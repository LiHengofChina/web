

//============================================================== JSON 转换成数组
//============================================================== JSON 转换成数组
	"JSON的数组格式"就是为了前端快速的"把JSON转换成数组"的一种格式。
	示例：
	let  abc = {
		'0': 'www',
		'1': 'liheng',
		'2': 'com',
		length:3
	}
	//跟普通的JSON对比是在最后多了一个length属性。
	//它可以轻松使用ES6的语法转变成数组

//=======================将json转换成数组格式
//=======================将json转换成数组格式
示例1： json 转数组
	let  abc = {
		'0': 'www',
		'1': 'baidu',
		'2': 'com',
		length:3
	}
	let arr = Array.from(abc);
	console.log(arr)

//============================================================== 文本或变量 转换成 数组
//============================================================== 文本或变量 转换成 数组
	旧的 eval的效率是很低的，它会拖慢我们的程序
	//=============Array.of()方法
	let arr =Array.of(3,4,5,6);
	console.log(arr);

	let arr2 =Array.of('www','baidu','com');
	console.log(arr2);


//============================================================== 在数组中找到元素 find()
//============================================================== 在数组中找到元素 find()
	//在函数中如果找到符合条件的数组元素就进行return，并停止查找。

示例：
    let arr=[1,2,3,4,5,6,7,8,9];
    console.log(arr.find(function(value,index,array){
        return value > 5;
    }))

	//value：表示当前查找的值。 	 形参
	//index：表示当前查找的数组索引。形参
	//array：表示当前数组。			 形参

//============================================================== 把数组进行填充	 fill()
//============================================================== 把数组进行填充	 fill()
示例：

	let arr=[0,1,2,3,4,5,6,7,8,9];
	arr.fill('ES6',2,5);
	console.log(arr); //[0, 1, "ES6", "ES6", "ES6", 5, 6, 7, 8, 9]
	//====================
	第一个参数是填充的变量
	第二个是开始脚标位置包涵
	第三个是结束脚标不包涵


//============================================================== 数组的遍历 for…of循环
//============================================================== 数组的遍历 for…of循环
//===========示例1：
	let arr=['www','baidu','com']
	for (let item of arr){
		console.log(item);
	} 

//===========示例2：数组的索引
    let arr=['www','baidu','com']
    for (let index of arr.keys()){
        console.log(index);
    }



//============================================================== 数组的迭代器 PS: 类似java的迭代器
//============================================================== 数组的迭代器 PS: 类似java的迭代器
 
	entries() 生成的是Iterator形式的数组
	这种形式的好处就是可以让我们在需要时用 next()手动跳转到下一个值
//===========示例1：
	let arr=['www','baidu','com']
	let iterator = arr.entries();
	console.log(iterator.next().value);  // [ 0, 'www' ]
	console.log(iterator.next().value);  // [ 1, 'baidu' ]
	console.log(iterator.next().value);	 // [ 2, 'com' ]

//===========示例2：
	let arr=['www','baidu','com']
	let iterator = arr.entries();
	for (let [index,value] of iterator){
		console.log(index + "|" + value);
	}




 
