https://segmentfault.com/a/1190000012419990

//===================================================================== CommonJS -服务器环境
//===================================================================== CommonJS -服务器环境

	CommonJS规范是诞生比较早的。NodeJS就采用了CommonJS。
	是这样加载模块：

	var clock = require('clock');
	clock.start();
	这种写法适合服务端，因为在服务器读取模块都是在本地磁盘，
	加载速度很快。
	但是如果在客户端，加载模块的时候有可能出现“假死”状况。
	//============
	比如上面的例子中clock的调用必须等待clock.js请求成功，
	加载完毕。那么，能不能异步加载模块呢？

	//========= 示例：

	// a.js
	// 相当于这里还有一行：var exports = module.exports;代码
	exports.a = 'Hello world';  // 相当于：module.exports.a = 'Hello world';

	// b.js
	var moduleA = require('./a.js');
	console.log(moduleA.a);     // 打印出hello world

//======================== 特点
//======================== 特点

	1 、模块可以多次加载，但是只会在第一次加载时运行一次，然后运行结果就被缓存了，
		以后再加载，就直接读取缓存结果。要想让模块再次运行，必须清除缓存。

	2 、模块加载会阻塞接下来代码的执行，需要等到模块加载完成才能继续执行——同步加载。
